/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package cl.ingerencia.api.algolia.swagger.codegen.api;

import cl.ingerencia.api.algolia.swagger.codegen.model.Paginacion;
import com.fasterxml.jackson.databind.ObjectMapper;
import io.swagger.annotations.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import javax.validation.constraints.*;
import java.io.IOException;
import java.util.List;
import java.util.Optional;

@Api(value = "articulos", description = "the articulos API")
public interface ArticulosApi {

    Logger log = LoggerFactory.getLogger(ArticulosApi.class);

    default Optional<ObjectMapper> getObjectMapper() {
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest() {
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }

    @ApiOperation(value = "Lista de articulos a procesar", nickname = "articulos", notes = "", response = Paginacion.class, tags={ "articulos", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Articulos", response = Paginacion.class) })
    @RequestMapping(value = "/articulos",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Paginacion> articulos(@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "query", required = true) String query,@ApiParam(value = "") @Valid @RequestParam(value = "page", required = false) String page) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"articulos\" : [ {    \"comment_text\" : \"comment_text\",    \"author\" : \"author\",    \"created_at\" : \"2000-01-23T04:56:07.000+00:00\",    \"title\" : \"title\",    \"url\" : \"url\",    \"objectID\" : 6.02745618307040320615897144307382404804229736328125,    \"points\" : 0.80082819046101150206595775671303272247314453125  }, {    \"comment_text\" : \"comment_text\",    \"author\" : \"author\",    \"created_at\" : \"2000-01-23T04:56:07.000+00:00\",    \"title\" : \"title\",    \"url\" : \"url\",    \"objectID\" : 6.02745618307040320615897144307382404804229736328125,    \"points\" : 0.80082819046101150206595775671303272247314453125  } ],  \"hitsPerPage\" : 1,  \"processingTimeMS\" : 7,  \"query\" : \"query\",  \"nbHits\" : 5,  \"page\" : 2,  \"params\" : \"params\",  \"nbPages\" : 5}", Paginacion.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ArticulosApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}
